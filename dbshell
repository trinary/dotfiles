use spud
db.observations.count()
db.observations.count()
db.observations.count()
db.observations.find().sort({timestamp: 1}).limit(1)
quit
help
show dbs
use spud
observations.all.count()
observation.all.count()
show collections
db.observations.find().so
db.observations.count()
observati
db.metrics.find({name: /cpu\/\d\/[^idle]/})
db.metrics.find({name: /cpu\/\d\/[^"idle"]/})
db.metrics.find({name: /cpu\/\d\/?!idle/})
db.metrics.find({name: /cpu\/\d\/?!idle/})
db.metrics.find({name: /cpu\/\d\/?!idle/})
db.metrics.find({name: /cpu\/\d\/(?!idle)/})
db.metrics.find({name: /cpu\/\d\/(?!idle)\/.+/})
db.metrics.find({name: /cpu\/\d\/(?!idle)\/.+/})
db.metrics.find({name: /cpu\/\d\/(?!idle)\/.+\Z/})
db.metrics.find({name: /cpu\/\d\/(?!idle)\/./})
db.metrics.find({name: /cpu\/\d\/(?!idle).+\/valud/})
db.metrics.find({name: /cpu\/\d\/(?!idle).+\/value/})
db.metrics.find({name: /cpu\/\d\/(?!idle).+\/ /})
db.metrics.find({name: /cpu\/\d\/(?!idle).+\/./})
db.metrics.find({name: /cpu\/\d\/(?!idle)[^/]\/./})
db.metrics.find({name: /cpu\/\d\/(?!idle)[^/]+\/./})
db.metrics.find({name: /cpu\/\d\/(?!idle)[^/]+/})
quit
top
top();
db.top();
db.stats();
help
show dbs
spud.stats();
use spud
db.stats();
db.stats()
db.serverStatus()
help
db.help
help
db.help()
quit
help
quit
e
admin.top
admin.top();
use admin
db.top();
db.runCommand("top");
db.runCommand('{"top":1}');
use admon
use admi
db.addUser("admin","admin")
quit
db.addUser("test_admin","test_admin")
use admin
db.addUser("test_admin","test_admin")
quit
help
show dbs
quit
help
shoe dbs
shoe dbs;
show dbs
lajsdf
help
show collections
j = { name : "mongo" };
t = { x : 3 };
db.things.save(j);
db.things.save(t);
use admin
db.addUser("test_admin","test_admin")
use status
db.addUser("ssbe","ssbe")
use statuses
db.addUser("ssbe","ssbe")
quit
db.foo.find()
;
quit
db.foo.find();
db.foo.find();
db.foo.find();
db.foo.find();
db.foo.find();
db.foo.find();
db.foo.find();
help
show collections
help
show dbs
quit
help
show dbs
show collections
asdf
help
show dbs;
db.stats();
db.foo.find();
db.foo.find();
db.foo.find();
db.foo.find();
db.admin.find();
db.admin.find();
db.foo.stats();
db.admin.stats();
db.admin.stats();
help
show dbs;
db.bla.stats();
db.bla.stat();
db.serverStatus();
db.stats()
db.stats();
db.stats();
.help
help
show dbs
;
db.statuses.top()
db.statuses.top
use statuses;
db.top
db.top()
db.help()
db.listCOmmands
db.listCommand()s
db.listCommands
db.listCommands()
db.top()
db.statuses.top()
help
show collections
db.indexes.top()
db.indexes.top
show dbs;
use statuses
db.Status.find()
help
use status
show dbs
use statuses
db.help
db.help()
db.Status.stats()
help
show dbs;
use status
show collections;
db.Statusfind();
db.Status.find();
help
show dbs
use admin
help
show dbs
use status
show collections
db.Status.find()
it
db.Status.delete()
db.Status.remove()
;
db.Status.find()
;
use core
show collections;
db.app_links.remove()
;
db.app_links.find()
;
help
show collections
use scratch
db.copytest.find()
show collections
show dbs
use scratch
db.foo.insert({id:"abcd",value:
db.foo.find()
db.foo.insert({_id:"abcd",value:"big old string"})
db.foo.find()
db.foo.insert({_id:"something else",db.foo.find({_id:"abcd"}).value()),
db.foo.insert({_id:"something else",db.foo.find({_id:"abcd"}).value()
db.foo.insert({_id:"something else",db.foo.find({_id:"abcd"}).value()})
db.foo.insert({_id:"something else",db.foo.find({"abcd").value()})
val = db.foo.find({_id:"abcd"})
val = db.foo.find({_id:"abcd"},{value:1})
val = db.foo.find({_id:"abcd"},{value:1}).value
;
)
val = db.foo.find({_id:"abcd"},{value:1}).value;
val
val = db.foo.find({_id:"abcd"},{value:1})
val
val["value"]
val = db.foo.findOne({_id:"abcd"},{value:1})
val
val.value
db.foo.find()
db.foo.insert({_id:"somethingelse", value:val})
db.foo.find
db.foo.find()
db.foo.insert({_id:"somethingelsessss", value:val.value})
db.foo.find()
