set shell=/bin/sh
set nocompatible
filetype off

call pathogen#infect()

filetype plugin indent on

set t_Co=256
set number
syntax on

set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim

set hidden
let mapleader=","
set history=1000

set updatetime=0

runtime macros/matchit.vim

set wildmenu
set wildmode=list:longest

set title
set scrolloff=3
set clipboard=unnamed

" PowerLine
let g:Powerline_symbols = 'fancy'

" ctrlp
let g:ctrlp_open_new_file = 't'
let g:ctrlp_open_multi = '1t'

let g:indentLine_color_term = 239

" sysshep.vim
"  set your systemshepherd username and password
" Let's read this from something I don't check in :)
source /Users/ewc/Dropbox/private.vim
"  set a keymapping to call the plugin
nnoremap SS :SysShepURLRequest<CR>
" Set encoding
set encoding=utf-8

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:·
set shiftround

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

:nnoremap <CR> :nohlsearch<cr>

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*


set fillchars=vert:│
" Status bar
set scrolloff=3
set autoindent
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
" set relativenumber
set noundofile
set wrap
set directory=~/.vim/tmp/
set backupdir=~/.vim/tmp
set shortmess=atI

let g:solarized_termcolors=256
colorscheme Tomorrow-Night

" don't clobber buffer if used in term
set t_ti= t_te=

" Make Arrow Keys Useful Again
map <down> <ESC>:bn<RETURN>
map <right> <ESC>:TagbarToggle<RETURN>
map <left> <ESC>:GundoToggle<RETURN>
map <up> <ESC>:bp<RETURN>

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

set splitbelow
set splitright

nnoremap /  q/i
xnoremap /  q/i
nnoremap ?  q?i
xnoremap ?  q?i
nnoremap q: :
xnoremap q: :
nnoremap q/ /
xnoremap q/ /
nnoremap q? ?
xnoremap q? ?
autocmd CmdwinEnter * nnoremap <buffer> <ESC> :q<CR>

inoremap <C-C> #<C-R>=system('/Users/ewc/bin/color_picker')<CR>

" Removes trailing spaces
function TrimWhiteSpace()
  %s/\s*$//
  ''
endfunction

au BufNewFile,BufRead *.less set filetype=css
au! BufRead,BufNewFile *.json set filetype=json


set list listchars=tab:\ \ ,trail:·,extends:>,precedes:<

map <F2> :call TrimWhiteSpace()<CR>
map! <F2> :call TrimWhiteSpace()<CR>

set background=dark

" rainbow braces
au VimEnter * RainbowParenthesesToggle
au Syntax clj,cljs,cljx RainbowParenthesesLoadRound
au Syntax clj,cljs,cljx RainbowParenthesesLoadSquare
au Syntax clj,cljs,cljx RainbowParenthesesLoadBraces
