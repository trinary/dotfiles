# The following lines were added by compinstall
typeset -U fpath path
fpath=($fpath $HOME/.zsh/func)


zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle :compinstall filename '~/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

autoload colors zsh/terminfo
colors
# Setup the prompt with pretty colors
setopt prompt_subst
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

autoload -U url-quote-magic
zle -N self-insert url-quote-magic


#export TERM=xterm-color
export CLICOLOR=1
#setopt appendhistory extendedglob notify
unsetopt beep
bindkey -e
cdpath=(~/Code ~/Code/api ~/Code/ssbe)

# End of lines configured by zsh-newuser-install
autoload -U promptinit
promptinit
export EDITOR="vim"
path=( $HOME/.rbenv/bin /Users/ewc/.rbenv/shims /Users/ewc/bin /usr/local/share/npm/bin/ opt/local/bin /opt/local/lib/postgresql84/bin /usr/local/mysql/bin /usr/local/bin /bin /usr/bin /sbin /usr/sbin /usr/local/sbin /usr/local/pgsql/bin /usr/local/git/bin /usr/X11/bin /Users/ewc/Code/incanter/bin /opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin /Users/ewc/bin/android-sdk-mac_x86/tools /Developer/usr/bin /Users/ewc/Code/crawl/crawl-ref/source )
export MANPATH="$MANPATH:/usr/local/man:/usr/local/git/man"
export PIV_WEB_ID=1807
export PIV_DASH_ID=6396
export LESS="-erX"
export JAVA_HOME=$(/usr/libexec/java_home)



alias grep="grep --color=auto"
alias scr='vim ~/util/scratch'
alias pscr='vim ~/util/scratch +1 -c ":r!xclip -o";cat ~/util/scratch |xclip -i'
alias gf='git flow'


# Pivotal webservice stuff
function pc {
  curl -v -H "X-TrackerToken: $PIVOTAL_TOKEN" -H "Content-type: application/xml" $@
}

function pweb {
  pc http://www.pivotaltracker.com/services/v1/projects/$PIV_WEB_ID
}
function pdash {
  pc http://www.pivotaltracker.com/services/v1/projects/$PIV_DASH_ID
}

function lmv {
[ -e "$1" -a -d "$2" ] && mv "$1" "$2"/ && ln -s "$2"/"$(basename "$1")" "$(dirname "$1")";
}

function calc {
  awk "BEGIN{ print $* }"
}

bindkey '^o' push-line-or-edit

bell=`tput bel`
function iterm() {
echo -n "\033]1;$USERNAME@$HOST$bell\033]2;$PWD> - $USERNAME@$HOST ($status)$bell"
}

precmd_functions+=(iterm)
source ~/.zsh/func/ssbe-zsh/ssbe-web.zsh

#export PS1="%n@%m %F{cyan}%1~%f %(1v.%F{green}%1v%f.) %# "

export ARCHFLAGS='-arch x86_64'

export GOROOT="$HOME/Code/go"
export GOBIN="$HOME/bin"
export GOOS="darwin"
export GOARCH="amd64"

export API_WORKSPACE=code/svn

export NODE_PATH=/usr/local/lib/node_modules


# Load the theme
source "/Users/ewc/.zsh/themes/clean.zsh-theme"

# get the name of the branch we are on
function git_prompt_info() {
#  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  GST=$( git status 2>/dev/null|tail -n1 )
  if [[ $GST != "nothing to commit, working directory clean" ]]; then
    GP="$ZSH_THEME_GIT_PROMPT_DIRTY"
  else
    GP="$ZSH_THEME_GIT_PROMPT_CLEAN"
  fi
  if [[ $GST == "" ]] ; then
    echo -n ""
  else
    echo "$ZSH_THEME_GIT_PROMPT_PREFIX$(current_branch)$GP$ZSH_THEME_GIT_PROMPT_SUFFIX"
  fi
}

parse_git_dirty () {
  GST=$( git status 2>/dev/null|tail -n1 )
}

#
# Will return the current branch name
# Usage example: git pull origin $(current_branch)
#
function current_branch() {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo ${ref#refs/heads/}
}

# Aliases
alias g='git'
alias gst='git status'
alias gco='git checkout'
alias gl='git pull'
alias gup='git fetch && git rebase'
alias gp='git push'
alias gd='git diff | mate'
alias gdv='git diff -w "$@" | vim -R -'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gb='git branch'
alias gba='git branch -a'
alias gcount='git shortlog -sn'
alias gcp='git cherry-pick'
alias be='bundle exec'


alias vi=vim

function epoch() {
  ruby -e "puts Time.at($*)"
}

funtion taxdeploy() {
  git checkout master && git merge edge && git push && git push heroku master && git checkout edge
}

function servethis() {
  python -m SimpleHTTPServer $*
}

function h() {
  http --json --pretty all --auth 'dev:dtdmnpp!!' $*
}

[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

#eval "$(rbenv init -)"
# instead of that ^
# just do this

source /Users/ewc/.rbenv/completions/rbenv.zsh

rbenv() {
  local command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
    shell)
      eval `rbenv "sh-$command" "$@"`;;
    *)
      command rbenv "$command" "$@";;
  esac
}

. <(npm completion)

source /Users/ewc/Code/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

source /Users/ewc/Dropbox/private.zsh
